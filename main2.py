from graph import Graph
from matrix import create_matrix, get_coherent_graph, graph_for_taboo
from dijkstra import dijkstra
from taboo_search import taboo_search, fitness
import numpy as np
import matplotlib.pyplot as plt

# no[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 11 12]
# =============================================================================
# x = [2, 6, 0, 9, 5, 2, 6, 0, 4, 9, 6, 10, 2]
# y = [0, 0, 1, 2, 3, 4, 5, 6, 6, 6, 8, 9, 10]
# C = [(0,2),(0,5),(0,4),(0,1),(1,4),(1,3),(2,5),(3,6),(3,9),(4,5),(8,12),(8,10),
#      (4,6),(4,8),(5,7),(5,8),(6,8),(6,9),(6,10),(7,8),(7,12),(9,10),(9,11),
#      (10,11),(10,12)]
# =============================================================================

# =============================================================================
# x = [0,  7,  13,  6,  0,  1,  3, 13,  3,  0,  4,  7,  4,  8,  3, 13, 10,
#         6,  3, 14, 10,  7, 13,  0,  1]
# y = [11, 11,  10,  4,  3,  1,  4,  2,  1, 14, 10, 14,  6,  8,  7,  5, 12,
#         8, 12,  0,  4,  2, 14,  7, 10]
# C = [(0,24),(0,9),(18,10),(1,17),(1,13),(5,8),(4,5),(4,6),(8,6),(12,14),(6,12),
#      (23,4),(23,24),(21,3),(20,21),(20,7),(7,19),(2,22),(2,16),(11,1),(10,14),
#      (20,15),(12,17),(15,7),(3,12),(3,17),(13,17),(20,17),(2,15),(16,11),(3,6),
#      (18,24),(23,14),(6,14),(22,16),(11,18),(1,10),(9,18),(1,16),(13,20),
#      (21,8),(10,24),(10,17),(13,16),(19,21)]
# =============================================================================

# =============================================================================
# H =  Graph(x, y, C)
# H.create_shortest_paths(dijkstra)
# paths = H._shortest_paths
# 
# profit_table = 10 * np.round(np.random.rand(len(H),len(H)), 3)
# S = H, profit_table, 2
# 
# for i in range(len(profit_table)):
#     profit_table[i][i] = 0
# =============================================================================

# =============================================================================
# s0 = [0,1,3,9,11,10,6,4,8,12,7,5,2,0,4,6,8,12]
# sol, fit, lst = taboo_search(H, profit_table, s0)
# =============================================================================



